@model IEnumerable<MvcToDoList.Models.ToDoList>

@{
    ViewData["Title"] = "Upcoming Week";
}

<h4 class="my-4">This upcoming week's To-Do List</h4>

<h4 class="badge bg-primary">@DateTime.Today.ToString("dd-MM-yyyy") - @DateTime.Today.AddDays(7).ToString("dd-MM-yyyy")</h4>

<table class="table table-striped table-hover mt-5">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Task)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Assgignee)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.CompleteBy)
            </th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            @*string todaysDate = DateTime.Today.ToString("dd-MM-yyyy");
                DateTime dateIn7Days = DateTime.Now.AddDays(7).ToString("dd-MM-yyyy");
                int result = DateTime.Compare(todaysDate <= dateIn7Days);*@

            @if (item.CompleteBy == DateTime.Today || item.CompleteBy == DateTime.Today.AddDays(1) || item.CompleteBy == DateTime.Today.AddDays(2) || item.CompleteBy == DateTime.Today.AddDays(3) || item.CompleteBy == DateTime.Today.AddDays(4) || item.CompleteBy == DateTime.Today.AddDays(5) || item.CompleteBy == DateTime.Today.AddDays(6) || item.CompleteBy == DateTime.Today.AddDays(7))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Task)
                    </td>
                    <td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        </td>
                    @if (item.Priority == "Highest")
                    {
                        <td style="color:#8B0000;">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                    }
                    @if (item.Priority == "High")
                    {
                        <td class="text-danger">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                    }
                    @if (item.Priority == "Medium")
                    {
                        <td class="text-warning">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                    }
                    @if (item.Priority == "Low")
                    {
                        <td style="color:#1E90FF;">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                    }
                    @if (item.Priority == "Lowest")
                    {
                        <td style="color:#0000CD;">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                    }
                    <td>
                        </td>
                            
                    <td>
                        @Html.DisplayFor(modelItem => item.Assgignee)
                    </td>
                    <td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompleteBy)
                    </td>
                    <td>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id"
                   class="btn btn-primary">
                            <i class="bi bi-info-circle"></i>
                        </a>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id"
                   class="btn btn-warning">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                    </td>
                    <td>
                        <a asp-action="Delete" asp-route-id="@item.Id"
                   class="btn btn-danger">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>